From e47c315f51862779027c26b9e6c5ce54faae5174 Mon Sep 17 00:00:00 2001
From: Chris Brown <77508021+peakschris@users.noreply.github.com>
Date: Fri, 8 Aug 2025 11:56:39 -0400
Subject: [PATCH 1/2] debug non-printing characters and handle CRLF

---
 libarchive/archive_read_support_format_mtree.c | 17 ++++++++++++++++-
 1 file changed, 16 insertions(+), 1 deletion(-)

diff --git a/libarchive/archive_read_support_format_mtree.c b/libarchive/archive_read_support_format_mtree.c
index fb0f946b..421892ef 100644
--- a/libarchive/archive_read_support_format_mtree.c
+++ b/libarchive/archive_read_support_format_mtree.c
@@ -1073,6 +1073,7 @@ read_mtree(struct archive_read *a, struct mtree *mtree)
 		/* Non-printable characters are not allowed */
 		for (s = p;s < p + len - 1; s++) {
 			if (!isprint((unsigned char)*s) && *s != '\t') {
+				fprintf(stderr, "non-printing character 0x%02X\n", (unsigned char)(*s));
 				r = ARCHIVE_FATAL;
 				break;
 			}
@@ -2130,6 +2131,13 @@ readline(struct archive_read *a, struct mtree *mtree, char **start,
 		for (u = mtree->line.s + find_off; *u; ++u) {
 			if (u[0] == '\n') {
 				/* Ends with unescaped newline. */
+				/* Check if preceded by '\r' for CRLF handling */
+				if (u > mtree->line.s && u[-1] == '\r') {
+					/* CRLF ending - remove the '\r' */
+					u[-1] = '\n';
+					u[0] = '\0';
+					total_size--;
+				}
 				*start = mtree->line.s;
 				return total_size;
 			} else if (u[0] == '#') {
@@ -2141,7 +2149,14 @@ readline(struct archive_read *a, struct mtree *mtree, char **start,
 			} else if (u[0] == '\\') {
 				if (u[1] == '\n') {
 					/* Trim escaped newline. */
-					total_size -= 2;
+					/* Check if there's a '\r' before the '\n' for CRLF */
+					if (u > mtree->line.s && u[-1] == '\r') {
+						/* Escaped CRLF - remove '\r\\\n' (3 chars) */
+						total_size -= 3;
+					} else {
+						/* Escaped LF - remove '\\\n' (2 chars) */
+						total_size -= 2;
+					}
 					mtree->line.s[total_size] = '\0';
 					break;
 				} else if (u[1] != '\0') {
-- 
2.41.0.windows.1


From 7387b43cdd7bf4d0d81a62925f1606375855f553 Mon Sep 17 00:00:00 2001
From: Chris Brown <77508021+peakschris@users.noreply.github.com>
Date: Fri, 8 Aug 2025 11:57:12 -0400
Subject: [PATCH 2/2] ignore options specified after @filename

---
 tar/read.c  | 15 +++++++++++----
 tar/write.c |  5 +++++
 2 files changed, 16 insertions(+), 4 deletions(-)

diff --git a/tar/read.c b/tar/read.c
index 8563fe71..5f6203a7 100644
--- a/tar/read.c
+++ b/tar/read.c
@@ -148,10 +148,17 @@ read_archive(struct bsdtar *bsdtar, char mode, struct archive *writer)
 	int			  r;
 
 	while (*bsdtar->argv) {
-		if (archive_match_include_pattern(bsdtar->matching,
-		    *bsdtar->argv) != ARCHIVE_OK)
-			lafe_errc(1, 0, "Error inclusion pattern: %s",
-			    archive_error_string(bsdtar->matching));
+		if ((*bsdtar->argv)[0] == '-' && (*bsdtar->argv)[1] != '\0' && strcmp(*bsdtar->argv, "-") != 0) {
+			/* Looks like a misplaced option - warn and ignore */
+			/* Allow plain "-" (often used for stdin/stdout) */
+			lafe_warnc(0, "Ignoring misplaced option '%s' "
+			    "(options must come before file arguments)", *bsdtar->argv);
+		} else {
+			if (archive_match_include_pattern(bsdtar->matching,
+			    *bsdtar->argv) != ARCHIVE_OK)
+				lafe_errc(1, 0, "Error inclusion pattern: %s",
+				    archive_error_string(bsdtar->matching));
+		}
 		bsdtar->argv++;
 	}
 
diff --git a/tar/write.c b/tar/write.c
index 92cc0ce5..b6cb3b6d 100644
--- a/tar/write.c
+++ b/tar/write.c
@@ -514,6 +514,11 @@ write_archive(struct archive *a, struct bsdtar *bsdtar)
 				}
 			}
 			set_chdir(bsdtar, arg);
+		} else if (arg[0] == '-' && arg[1] != '\0' && strcmp(arg, "-") != 0) {
+			/* Looks like a misplaced option - warn and ignore */
+			/* Allow plain "-" (often used for stdin/stdout) */
+			lafe_warnc(0, "Ignoring misplaced option '%s' "
+			    "(options must come before file arguments)", arg);
 		} else {
 			if (*arg != '/')
 				do_chdir(bsdtar); /* Handle a deferred -C */
-- 
2.41.0.windows.1
